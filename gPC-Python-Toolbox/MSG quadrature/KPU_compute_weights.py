import numpy as np
def KPU_compute_weights(order):
    
# This function computes weights corresponding to univariate points up to a 
# given order for Kronrod Patterson-based Rule for a uniformly distributed 
# random variable

# Input: order
# Output: weights
    

    if (order == 0):
      weights = np.array([[1.0000000000000000e+000]])
    elif(order == 1): 
      weights = np.array([[1.0000000000000000e+000]])
    elif(order == 2):
      weights = np.array([[4.4444440000000002e-001],[ 2.7777780000000002e-001]])
    elif(order == 3):
      weights = np.array([[4.4444440000000002e-001],[ 2.7777780000000002e-001]])
    elif(order== 4):
      weights = np.array([[2.2545832254583223e-001],[ 2.0069872006987199e-001],[ 1.3424401342440134e-001],[ 5.2328105232810521e-002]])
    elif(order== 5):
      weights = np.array([[2.2545832254583223e-001],[ 2.0069872006987199e-001],[ 1.3424401342440134e-001],[ 5.2328105232810521e-002]])
    elif(order== 6):
      weights = np.array([[2.2545832254583223e-001],[ 2.0069872006987199e-001],[ 1.3424401342440134e-001],[ 5.2328105232810521e-002]])
    elif(order== 7):
      weights = np.array([[1.1275520000000000e-001],[ 1.0957840000000001e-001],[ 1.0031430000000000e-001],[ 8.5755999999999999e-002],[ 6.7207600000000006e-002],[ 4.6463600000000001e-002],[ 2.5801600000000001e-002],[ 8.5009000000000005e-003]])
    elif(order== 8):
      weights = np.array([[1.1275520000000000e-001],[ 1.0957840000000001e-001],[ 1.0031430000000000e-001],[ 8.5755999999999999e-002],[ 6.7207600000000006e-002],[ 4.6463600000000001e-002],[ 2.5801600000000001e-002],[ 8.5009000000000005e-003]])
    elif(order== 9): 
      weights = np.array([[1.1275520000000000e-001],[ 1.0957840000000001e-001],[ 1.0031430000000000e-001],[ 8.5755999999999999e-002],[ 6.7207600000000006e-002],[ 4.6463600000000001e-002],[ 2.5801600000000001e-002],[ 8.5009000000000005e-003]])
    elif(order== 10):
      weights = np.array([[1.1275520000000000e-001],[ 1.0957840000000001e-001],[ 1.0031430000000000e-001],[ 8.5755999999999999e-002],[ 6.7207600000000006e-002],[ 4.6463600000000001e-002],[ 2.5801600000000001e-002],[ 8.5009000000000005e-003]])
    elif(order== 11):
      weights = np.array([[1.1275520000000000e-001],[ 1.0957840000000001e-001],[ 1.0031430000000000e-001],[ 8.5755999999999999e-002],[ 6.7207600000000006e-002],[ 4.6463600000000001e-002],[ 2.5801600000000001e-002],[ 8.5009000000000005e-003]])
    elif(order== 12):
      weights = np.array([[1.1275520000000000e-001],[ 1.0957840000000001e-001],[ 1.0031430000000000e-001],[ 8.5755999999999999e-002],[ 6.7207600000000006e-002],[ 4.6463600000000001e-002],[ 2.5801600000000001e-002],[ 8.5009000000000005e-003]])
    elif(order== 13):
      weights = np.array([[5.6377600000000014e-002],[ 5.5978400000000011e-002],[ 5.4789200000000017e-002],[ 5.2834900000000011e-002],[ 5.0157100000000017e-002],[ 4.6813600000000004e-002],[ 4.2878000000000006e-002],[ 3.8439800000000010e-002],[ 3.3603900000000006e-002],[ 2.8489800000000006e-002],[ 2.3231400000000003e-002],[ 1.7978600000000004e-002],[ 1.2903800000000003e-002],[ 8.2230000000000011e-003],[ 4.2173000000000011e-003],[ 1.2724000000000001e-003]])
    elif(order== 14):
      weights = np.array([[5.6377600000000014e-002],[ 5.5978400000000011e-002],[ 5.4789200000000017e-002],[ 5.2834900000000011e-002],[ 5.0157100000000017e-002],[ 4.6813600000000004e-002],[ 4.2878000000000006e-002],[ 3.8439800000000010e-002],[ 3.3603900000000006e-002],[ 2.8489800000000006e-002],[ 2.3231400000000003e-002],[ 1.7978600000000004e-002],[ 1.2903800000000003e-002],[ 8.2230000000000011e-003],[ 4.2173000000000011e-003],[ 1.2724000000000001e-003]])
    elif(order== 15):
      weights = np.array([[5.6377600000000014e-002],[ 5.5978400000000011e-002],[ 5.4789200000000017e-002],[ 5.2834900000000011e-002],[ 5.0157100000000017e-002],[ 4.6813600000000004e-002],[ 4.2878000000000006e-002],[ 3.8439800000000010e-002],[ 3.3603900000000006e-002],[ 2.8489800000000006e-002],[ 2.3231400000000003e-002],[ 1.7978600000000004e-002],[ 1.2903800000000003e-002],[ 8.2230000000000011e-003],[ 4.2173000000000011e-003],[ 1.2724000000000001e-003]])
    elif(order== 16):
      weights = np.array([[5.6377600000000014e-002],[ 5.5978400000000011e-002],[ 5.4789200000000017e-002],[ 5.2834900000000011e-002],[ 5.0157100000000017e-002],[ 4.6813600000000004e-002],[ 4.2878000000000006e-002],[ 3.8439800000000010e-002],[ 3.3603900000000006e-002],[ 2.8489800000000006e-002],[ 2.3231400000000003e-002],[ 1.7978600000000004e-002],[ 1.2903800000000003e-002],[ 8.2230000000000011e-003],[ 4.2173000000000011e-003],[ 1.2724000000000001e-003]])
    elif(order== 17):
      weights = np.array([[5.6377600000000014e-002],[ 5.5978400000000011e-002],[ 5.4789200000000017e-002],[ 5.2834900000000011e-002],[ 5.0157100000000017e-002],[ 4.6813600000000004e-002],[ 4.2878000000000006e-002],[ 3.8439800000000010e-002],[ 3.3603900000000006e-002],[ 2.8489800000000006e-002],[ 2.3231400000000003e-002],[ 1.7978600000000004e-002],[ 1.2903800000000003e-002],[ 8.2230000000000011e-003],[ 4.2173000000000011e-003],[ 1.2724000000000001e-003]])
    elif(order== 18):
      weights = np.array([[5.6377600000000014e-002],[ 5.5978400000000011e-002],[ 5.4789200000000017e-002],[ 5.2834900000000011e-002],[ 5.0157100000000017e-002],[ 4.6813600000000004e-002],[ 4.2878000000000006e-002],[ 3.8439800000000010e-002],[ 3.3603900000000006e-002],[ 2.8489800000000006e-002],[ 2.3231400000000003e-002],[ 1.7978600000000004e-002],[ 1.2903800000000003e-002],[ 8.2230000000000011e-003],[ 4.2173000000000011e-003],[ 1.2724000000000001e-003]])
    elif(order== 19):
      weights = np.array([[5.6377600000000014e-002],[ 5.5978400000000011e-002],[ 5.4789200000000017e-002],[ 5.2834900000000011e-002],[ 5.0157100000000017e-002],[ 4.6813600000000004e-002],[ 4.2878000000000006e-002],[ 3.8439800000000010e-002],[ 3.3603900000000006e-002],[ 2.8489800000000006e-002],[ 2.3231400000000003e-002],[ 1.7978600000000004e-002],[ 1.2903800000000003e-002],[ 8.2230000000000011e-003],[ 4.2173000000000011e-003],[ 1.2724000000000001e-003]])
    elif(order==20):
      weights = np.array([[5.6377600000000014e-002],[ 5.5978400000000011e-002],[ 5.4789200000000017e-002],[ 5.2834900000000011e-002],[ 5.0157100000000017e-002],[ 4.6813600000000004e-002],[ 4.2878000000000006e-002],[ 3.8439800000000010e-002],[ 3.3603900000000006e-002],[ 2.8489800000000006e-002],[ 2.3231400000000003e-002],[ 1.7978600000000004e-002],[ 1.2903800000000003e-002],[ 8.2230000000000011e-003],[ 4.2173000000000011e-003],[ 1.2724000000000001e-003]])
    elif(order==21):
      weights = np.array([[5.6377600000000014e-002],[ 5.5978400000000011e-002],[ 5.4789200000000017e-002],[ 5.2834900000000011e-002],[ 5.0157100000000017e-002],[ 4.6813600000000004e-002],[ 4.2878000000000006e-002],[ 3.8439800000000010e-002],[ 3.3603900000000006e-002],[ 2.8489800000000006e-002],[ 2.3231400000000003e-002],[ 1.7978600000000004e-002],[ 1.2903800000000003e-002],[ 8.2230000000000011e-003],[ 4.2173000000000011e-003],[ 1.2724000000000001e-003]])
    elif(order==22):
      weights = np.array([[5.6377600000000014e-002],[ 5.5978400000000011e-002],[ 5.4789200000000017e-002],[ 5.2834900000000011e-002],[ 5.0157100000000017e-002],[ 4.6813600000000004e-002],[ 4.2878000000000006e-002],[ 3.8439800000000010e-002],[ 3.3603900000000006e-002],[ 2.8489800000000006e-002],[ 2.3231400000000003e-002],[ 1.7978600000000004e-002],[ 1.2903800000000003e-002],[ 8.2230000000000011e-003],[ 4.2173000000000011e-003],[ 1.2724000000000001e-003]])
    elif(order==23):
      weights = np.array([[5.6377600000000014e-002],[ 5.5978400000000011e-002],[ 5.4789200000000017e-002],[ 5.2834900000000011e-002],[ 5.0157100000000017e-002],[ 4.6813600000000004e-002],[ 4.2878000000000006e-002],[ 3.8439800000000010e-002],[ 3.3603900000000006e-002],[ 2.8489800000000006e-002],[ 2.3231400000000003e-002],[ 1.7978600000000004e-002],[ 1.2903800000000003e-002],[ 8.2230000000000011e-003],[ 4.2173000000000011e-003],[ 1.2724000000000001e-003]])
    elif(order==24):
      weights = np.array([[5.6377600000000014e-002],[ 5.5978400000000011e-002],[ 5.4789200000000017e-002],[ 5.2834900000000011e-002],[ 5.0157100000000017e-002],[ 4.6813600000000004e-002],[ 4.2878000000000006e-002],[ 3.8439800000000010e-002],[ 3.3603900000000006e-002],[ 2.8489800000000006e-002],[ 2.3231400000000003e-002],[ 1.7978600000000004e-002],[ 1.2903800000000003e-002],[ 8.2230000000000011e-003],[ 4.2173000000000011e-003],[ 1.2724000000000001e-003]])
    elif(order==25):
      weights = np.array([[2.8188799999999993e-002],[ 2.8138799999999992e-002],[ 2.7989199999999992e-002],[ 2.7740699999999993e-002],[ 2.7394599999999995e-002],[ 2.6952699999999993e-002],[ 2.6417499999999993e-002],[ 2.5791599999999994e-002],[ 2.5078599999999993e-002],[ 2.4282199999999993e-002],[ 2.3406799999999995e-002],[ 2.2457299999999996e-002],[ 2.1438999999999996e-002],[ 2.0357799999999995e-002],[ 1.9219899999999998e-002],[ 1.8032199999999998e-002],[ 1.6801899999999998e-002],[ 1.5536799999999996e-002],[ 1.4244899999999996e-002],[ 1.2934799999999996e-002],[ 1.1615699999999998e-002],[ 1.0297099999999998e-002],[ 8.9892999999999987e-003],[ 7.7033999999999983e-003],[ 6.4518999999999983e-003],[ 5.2490999999999987e-003],[ 4.1114999999999988e-003],[ 3.0577999999999990e-003],[ 2.1087999999999997e-003],[ 1.2894999999999998e-003],[ 6.3259999999999987e-004],[ 1.8159999999999997e-004]])
    
    len_n = len(weights)
 
    
    if len_n>1:
        i = 1
        for ct in range(1,len_n):
          
            weights.resize(i+len_n,1)
            weights[i+len_n-1] = weights[ct]
            i = i+1
    
    return(weights)
